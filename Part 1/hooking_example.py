from capstone import *
from qiling import *

def hook_callback(ql, address, size):
    # read current instruction bytes
    data = ql.mem.read(address, size)
    # initialize Capstone
    md = Cs(CS_ARCH_ARM, CS_MODE_ARM)
    # disassemble current instruction
    for i in md.disasm(data, address):
        print("[*] 0x{:08x}: {} {}".format(i.address, i.mnemonic, i.op_str))

# initialize emulator (x86 ARM)
ql = Qiling(["qiling/examples/rootfs/arm_linux/bin/arm_hello"], "qiling/examples/rootfs/arm_linux")
# hook every instruction
ql.hook_code(hook_callback)
# start emulation (timeout in microseconds)
ql.run(timeout=1000)
